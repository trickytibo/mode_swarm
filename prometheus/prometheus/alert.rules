ALERT InstanceDown
  IF up == 0
  FOR 10s
  LABELS {
    severity="critical"
  }
  ANNOTATIONS {
    summary = "Instance {{$labels.instance}} down",
    description = "{{$labels.instance}} of job {{$labels.job}} has been down for more than 5 minutes.",
  }
  
ALERT high_load
  IF node_load1 > 0.5
  ANNOTATIONS {
    summary = "Instance {{ $labels.instance }} under high load",
    description = "{{ $labels.instance }} of job {{ $labels.job }} is under high load.",  
}

ALERT InstanceHighCpu  
  IF 100 - (avg by (host) (irate(node_cpu{mode="idle"}[5m])) * 100) > 5
  FOR 10m  LABELS { severity = "critical" }
  ANNOTATIONS {
    summary = "Instance {{$labels.host}}: cpu high",
    description = "{{$labels.host}} has high cpu activity"
  }

ALERT InstanceLowMemory  
  IF node_memory_MemAvailable < 268435456
  FOR 10m
  LABELS { severity = "critical" }
  ANNOTATIONS {
    summary = "Instance {{$labels.host}}: memory low",
    description = "{{$labels.host}} has less than 256M memory available"
  }

ALERT InstanceLowDisk  
  IF sum(node_filesystem_avail{device="/dev/vda1"}) by (instance) < 10737418240
  FOR 10m  LABELS { severity = "critical" }
  ANNOTATIONS {
    summary = "Instance {{$labels.host}}: low disk space",
    description = "{{$labels.host}} has less than 10G FS space"
  }

# Alert for any instance that have a median request latency >1s.
ALERT APIHighRequestLatency
  IF api_http_request_latencies_second{quantile="0.5"} > 1
  FOR 1m
  ANNOTATIONS {
    summary = "High request latency on {{ $labels.instance }}",
    description = "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)",
  }

ALERT ContainerStarted  
  IF time() - container_start_time_seconds{image=~"httpd.*"} <= 60
    and (
      container_start_time_seconds{image=~"httpd.*"} % (60 * 60 * 24) / (60 * 60) < 6.8 or container_start_time_seconds{image=~"httpd.*"} % (60 * 60 * 24) / (60 * 60) > 7.5)
  LABELS { severity = "page" }
  ANNOTATIONS {
    summary = "Container {{$labels.image}} started",
    description = "Container {{$labels.image}} has been started on {{$labels.host}}"
  }

ALERT ContainerStopped  
  IF time() - container_last_seen{image=~"httpd.*"} > 30
  LABELS { severity = "page" }
  ANNOTATIONS {
    summary = "Container {{$labels.image}} stopped",
    description = "Container {{$labels.image}} has been stopped on {{$labels.host}}"
  }
